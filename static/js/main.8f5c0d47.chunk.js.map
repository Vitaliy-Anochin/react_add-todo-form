{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","href","email","className","id","name","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","username","getUser","usrId","usersFromServer","find","userId","App","useState","todoList","setTodoList","setUserId","setTitle","hasTitleError","setHasTitleError","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","length","newTodo","Math","max","currentTodos","addTodo","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f5c0d47.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a\n    href={`mailto: ${user.email}`}\n    className=\"UserInfo\"\n    data-id={user.id}\n  >\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && (<UserInfo user={todo.user} />)}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FormEvent, useState } from 'react';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUser(usrId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === usrId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todoList, setTodoList] = useState(todos);\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const getMaxId = () => {\n    return Math.max(...todoList.map(todo => todo.id)) + 1;\n  };\n\n  const addTodo = () => {\n    const newTodo = {\n      id: getMaxId(),\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    setTodoList(currentTodos => {\n      return [...currentTodos, newTodo];\n    });\n  };\n\n  const handeSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (title.length === 0) {\n      setHasTitleError(true);\n    }\n\n    if (userId === 0) {\n      setHasUserError(true);\n    }\n\n    if (title.length > 0 && userId > 0) {\n      addTodo();\n      setTitle('');\n      setUserId(0);\n      setHasTitleError(false);\n      setHasUserError(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"api/users\"\n        method=\"POST\"\n        onSubmit={handeSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter the title\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n          />\n\n          {(hasTitleError && title.length === 0)\n            && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n            }}\n          >\n            <option\n              value=\"\"\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => {\n              const { id, name } = user;\n\n              return (\n                <option\n                  value={id}\n                  key={id}\n                >\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n\n          {(hasUserError && userId === 0)\n            && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}